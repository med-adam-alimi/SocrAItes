#!/usr/bin/env python3
"""
Test script to verify the SocrAItes API functionality
"""

import requests
import json
import time

def test_regular_chat():
    """Test the regular chat endpoint"""
    print("🧪 Testing regular chat API...")
    
    try:
        response = requests.post('http://127.0.0.1:5000/api/chat', 
                               json={'message': 'What is the meaning of life?', 'philosopher': 'camus'},
                               timeout=30)
        
        print(f"Status: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            print(f"✅ Response: {data['response'][:200]}...")
            print(f"Generated by: {data.get('generated_by', 'unknown')}")
            print(f"System: {data.get('system_type', 'unknown')}")
            return True
        else:
            print(f"❌ Error: {response.text}")
            return False
            
    except Exception as e:
        print(f"❌ Request failed: {e}")
        return False

def test_streaming_chat():
    """Test the streaming chat endpoint"""
    print("\n🧪 Testing streaming chat API...")
    
    try:
        response = requests.post('http://127.0.0.1:5000/api/chat/stream', 
                               json={'message': 'Tell me about absurdism', 'philosopher': 'camus'},
                               timeout=30,
                               stream=True)
        
        print(f"Status: {response.status_code}")
        
        if response.status_code == 200:
            print("✅ Streaming response received:")
            chunk_count = 0
            for line in response.iter_lines(decode_unicode=True):
                if line and line.startswith('data: '):
                    chunk_count += 1
                    if chunk_count <= 3:  # Show first 3 chunks
                        try:
                            data = json.loads(line[6:])
                            print(f"  Chunk {chunk_count}: {data.get('type', 'unknown')} - {len(data.get('text', ''))} chars")
                        except:
                            pass
            print(f"✅ Received {chunk_count} streaming chunks")
            return True
        else:
            print(f"❌ Error: {response.text}")
            return False
            
    except Exception as e:
        print(f"❌ Streaming request failed: {e}")
        return False

def test_philosophers_endpoint():
    """Test the philosophers endpoint"""
    print("\n🧪 Testing philosophers API...")
    
    try:
        response = requests.get('http://127.0.0.1:5000/api/philosophers', timeout=10)
        
        print(f"Status: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            philosophers = data.get('philosophers', [])
            print(f"✅ Found {len(philosophers)} philosophers:")
            for phil in philosophers:
                print(f"  - {phil}")
            return True
        else:
            print(f"❌ Error: {response.text}")
            return False
            
    except Exception as e:
        print(f"❌ Request failed: {e}")
        return False

if __name__ == "__main__":
    print("🚀 SocrAItes API Test Suite")
    print("=" * 40)
    
    # Test all endpoints
    results = []
    results.append(test_regular_chat())
    results.append(test_streaming_chat())
    results.append(test_philosophers_endpoint())
    
    print("\n" + "=" * 40)
    print(f"📊 Test Results: {sum(results)}/{len(results)} passed")
    
    if all(results):
        print("🎉 All tests passed! Application is ready for deployment.")
    else:
        print("⚠️ Some tests failed. Check the logs above.")